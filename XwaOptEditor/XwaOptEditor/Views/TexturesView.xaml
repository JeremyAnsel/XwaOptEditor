<UserControl x:Class="XwaOptEditor.Views.TexturesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:vm="clr-namespace:XwaOptEditor.ViewModels"
             xmlns:vc="clr-namespace:XwaOptEditor.Converters"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="700">
    <UserControl.DataContext>
        <vm:TexturesViewModel />
    </UserControl.DataContext>
    <DockPanel>
        <DockPanel DockPanel.Dock="Left">
            <ToolBarTray DockPanel.Dock="Bottom"
                         IsLocked="True"
                         DataContext="{Binding ElementName=Textures}">
                <ToolBar Band="0"
                         BandIndex="0"
                         IsEnabled="{Binding HasItems}">
                    <TextBlock Text="Save As...: " />
                    <Button Content="Color/Alpha Map"
                            Command="{Binding DataContext.SaveAsCommand}"
                            CommandParameter="{Binding SelectedItem.Value}" />
                    <Button Content="Color Map"
                            Command="{Binding DataContext.SaveAsColorCommand}"
                            CommandParameter="{Binding SelectedItem.Value}" />
                    <Button IsEnabled="{Binding SelectedItem.Value.HasAlpha}"
                            Content="Alpha Map"
                            Command="{Binding DataContext.SaveAsAlphaCommand}"
                            CommandParameter="{Binding SelectedItem.Value}" />
                </ToolBar>
                <ToolBar Band="1"
                         BandIndex="0"
                         IsEnabled="{Binding HasItems}">
                    <TextBlock Text="Replace With...: " />
                    <Button Content="Color/Alpha Map"
                            Command="{Binding DataContext.ReplaceMapCommand}"
                            CommandParameter="{Binding SelectedItem.Value}" />
                    <Button Content="Alpha Map"
                            Command="{Binding DataContext.ReplaceAlphaMapCommand}"
                            CommandParameter="{Binding SelectedItem.Value}" />
                </ToolBar>
                <ToolBar Band="2"
                         BandIndex="0"
                         IsEnabled="{Binding HasItems}">
                    <Button Content="Generate Mipmaps"
                            Command="{Binding DataContext.GenerateAllMipmapsCommand}" />
                    <Separator />
                    <TextBlock Text="Convert All to: " />
                    <Button Content="8 bits"
                            Command="{Binding DataContext.ConvertAllTo8BitsCommand}" />
                    <Button Content="32 bits"
                            Command="{Binding DataContext.ConvertAllTo32BitsCommand}" />
                </ToolBar>
                <ToolBar Band="3"
                         BandIndex="0"
                         IsEnabled="{Binding HasItems}">
                    <Button Content="Compact"
                            Command="{Binding DataContext.CompactCommand}" />
                    <Separator />
                    <Button Content="Generate Names"
                            Command="{Binding DataContext.GenerateNamesCommand}" />
                </ToolBar>
            </ToolBarTray>
            <DataGrid x:Name="Textures"
                      ItemsSource="{Binding OptModel.File.Textures}"
                      IsReadOnly="True"
                      AutoGenerateColumns="False"
                      IsSynchronizedWithCurrentItem="True"
                      SelectionMode="Single"
                      EnableRowVirtualization="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling">
                <DataGrid.ContextMenu>
                    <ContextMenu DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget}">
                        <MenuItem IsEnabled="{Binding HasItems}"
                                  Header="Save As...">
                            <MenuItem Header="Color/Alpha Map"
                                      Command="{Binding DataContext.SaveAsCommand}"
                                      CommandParameter="{Binding SelectedItem.Value}" />
                            <MenuItem Header="Color Map"
                                      Command="{Binding DataContext.SaveAsColorCommand}"
                                      CommandParameter="{Binding SelectedItem.Value}" />
                            <MenuItem IsEnabled="{Binding SelectedItem.Value.HasAlpha}"
                                      Header="Alpha Map"
                                      Command="{Binding DataContext.SaveAsAlphaCommand}"
                                      CommandParameter="{Binding SelectedItem.Value}" />
                        </MenuItem>
                        <MenuItem IsEnabled="{Binding HasItems}"
                                  Header="Replace With...">
                            <MenuItem Header="Color/Alpha Map"
                                      Command="{Binding DataContext.ReplaceMapCommand}"
                                      CommandParameter="{Binding SelectedItem.Value}" />
                            <MenuItem Header="Alpha Map"
                                      Command="{Binding DataContext.ReplaceAlphaMapCommand}"
                                      CommandParameter="{Binding SelectedItem.Value}" />
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name"
                                        Binding="{Binding Value.Name}" />
                    <DataGridTextColumn Header="Width"
                                        Binding="{Binding Value.Width}" />
                    <DataGridTextColumn Header="Height"
                                        Binding="{Binding Value.Height}" />
                    <DataGridTextColumn Header="Has Alpha"
                                        Binding="{Binding Value.HasAlpha}" />
                    <DataGridTextColumn Header="Is Illuminated"
                                        Binding="{Binding Value.IsIlluminated}" />
                    <DataGridTextColumn Header="Mipmaps"
                                        Binding="{Binding Value.MipmapsCount}" />
                    <DataGridTextColumn Header="Bpp"
                                        Binding="{Binding Value.BitsPerPixel}" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
        <TabControl>
            <TabItem Header="Color / Alpha maps">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0">
                        <TextBlock DockPanel.Dock="Left"
                                   Text="Color map"
                                   TextAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90" />
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <xctk:Zoombox ClipToBounds="True"
                                      KeepContentInBounds="True"
                                      Background="Black"
                                      ViewStackMode="Manual"
                                      HorizontalContentAlignment="Left"
                                      VerticalContentAlignment="Top"
                                      xctk:Zoombox.ViewFinderVisibility="Visible">
                            <xctk:Zoombox.ViewStack>
                                <xctk:ZoomboxView>Fit</xctk:ZoomboxView>
                            </xctk:Zoombox.ViewStack>
                            <Image Source="{Binding OptModel.File.Textures/Value, Converter={vc:TextureConverter}, ConverterParameter=0}"
                                   Stretch="None"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   RenderOptions.EdgeMode="Unspecified" />
                        </xctk:Zoombox>
                    </DockPanel>
                    <DockPanel Grid.Row="1">
                        <TextBlock DockPanel.Dock="Left"
                                   Text="Alpha map"
                                   TextAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90" />
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <xctk:Zoombox ClipToBounds="True"
                                      KeepContentInBounds="True"
                                      Background="Black"
                                      ViewStackMode="Manual"
                                      HorizontalContentAlignment="Left"
                                      VerticalContentAlignment="Top"
                                      xctk:Zoombox.ViewFinderVisibility="Visible">
                            <xctk:Zoombox.ViewStack>
                                <xctk:ZoomboxView>Fit</xctk:ZoomboxView>
                            </xctk:Zoombox.ViewStack>
                            <Image Source="{Binding OptModel.File.Textures/Value, Converter={vc:TextureConverter}, ConverterParameter=1}"
                                   Stretch="None"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   RenderOptions.EdgeMode="Unspecified" />
                        </xctk:Zoombox>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Color map">
                <xctk:Zoombox ClipToBounds="True"
                              KeepContentInBounds="True"
                              Background="Black"
                              ViewStackMode="Manual"
                              HorizontalContentAlignment="Left"
                              VerticalContentAlignment="Top"
                              xctk:Zoombox.ViewFinderVisibility="Visible">
                    <xctk:Zoombox.ViewStack>
                        <xctk:ZoomboxView>Fit</xctk:ZoomboxView>
                    </xctk:Zoombox.ViewStack>
                    <Image Source="{Binding OptModel.File.Textures/Value, Converter={vc:TextureConverter}, ConverterParameter=0}"
                           Stretch="None"
                           RenderOptions.BitmapScalingMode="NearestNeighbor"
                           RenderOptions.EdgeMode="Unspecified" />
                </xctk:Zoombox>
            </TabItem>
            <TabItem Header="Alpha map"
                     IsEnabled="{Binding OptModel.File.Textures/Value.HasAlpha}">
                <xctk:Zoombox ClipToBounds="True"
                              KeepContentInBounds="True"
                              Background="Black"
                              ViewStackMode="Manual"
                              HorizontalContentAlignment="Left"
                              VerticalContentAlignment="Top"
                              xctk:Zoombox.ViewFinderVisibility="Visible">
                    <xctk:Zoombox.ViewStack>
                        <xctk:ZoomboxView>Fit</xctk:ZoomboxView>
                    </xctk:Zoombox.ViewStack>
                    <Image Source="{Binding OptModel.File.Textures/Value, Converter={vc:TextureConverter}, ConverterParameter=1}"
                           Stretch="None"
                           RenderOptions.BitmapScalingMode="NearestNeighbor"
                           RenderOptions.EdgeMode="Unspecified" />
                </xctk:Zoombox>
            </TabItem>
            <TabItem Header="Illumination"
                     IsEnabled="{Binding OptModel.File.Textures/Value, Converter={vc:IsBpp8Converter}}">
                <DockPanel>
                    <DockPanel DockPanel.Dock="Left">
                        <TextBlock DockPanel.Dock="Top">Palette:</TextBlock>
                        <ListView x:Name="texturePaletteSelector"
                                  SelectedIndex="0"
                                  SelectionMode="Single"
                                  IsSynchronizedWithCurrentItem="True"
                                  VirtualizingPanel.IsVirtualizing="True"
                                  VirtualizingPanel.VirtualizationMode="Recycling">
                            <system:String>Default</system:String>
                            <system:String>0</system:String>
                            <system:String>1</system:String>
                            <system:String>2</system:String>
                            <system:String>3</system:String>
                            <system:String>4</system:String>
                            <system:String>5</system:String>
                            <system:String>6</system:String>
                            <system:String>7</system:String>
                            <system:String>8</system:String>
                            <system:String>9</system:String>
                            <system:String>10</system:String>
                            <system:String>11</system:String>
                            <system:String>12</system:String>
                            <system:String>13</system:String>
                            <system:String>14</system:String>
                            <system:String>15</system:String>
                        </ListView>
                    </DockPanel>
                    <ToolBarTray DockPanel.Dock="Bottom"
                                 IsLocked="True"
                                 IsEnabled="{Binding OptModel.File.Textures/Value, Converter={vc:IsBpp8Converter}}">
                        <ToolBar Band="0"
                                 BandIndex="0">
                            <Button Click="SetTextureIlluminationColorKey_Click">Make illuminated:</Button>
                            <xctk:ColorPicker x:Name="textureIlluminationColorKey"
                                              Width="80"
                                              UsingAlphaChannel="False"
                                              ShowStandardColors="False"
                                              AvailableColorsSortingMode="HueSaturationBrightness"
                                              ColorMode="ColorCanvas"
                                              SelectedColor="Black" />
                        </ToolBar>
                        <ToolBar Band="1"
                                 BandIndex="0">
                            <Button Click="SetTextureIlluminationColorKeyRange_Click">Make illuminated:</Button>
                            <xctk:ColorPicker x:Name="textureIlluminationColorKey0"
                                              Width="80"
                                              UsingAlphaChannel="False"
                                              ShowStandardColors="False"
                                              AvailableColorsSortingMode="HueSaturationBrightness"
                                              ColorMode="ColorCanvas"
                                              SelectedColor="Black" />
                            <TextBlock Text=" to " />
                            <xctk:ColorPicker x:Name="textureIlluminationColorKey1"
                                              Width="80"
                                              UsingAlphaChannel="False"
                                              ShowStandardColors="False"
                                              AvailableColorsSortingMode="HueSaturationBrightness"
                                              ColorMode="ColorCanvas"
                                              SelectedColor="Black" />
                        </ToolBar>
                        <ToolBar Band="2"
                                 BandIndex="0">
                            <Button Click="SetTextureIlluminationReset_Click">Reset illumination:</Button>
                        </ToolBar>
                    </ToolBarTray>
                    <xctk:Zoombox ClipToBounds="True"
                              KeepContentInBounds="True"
                              Background="Black"
                              ViewStackMode="Manual"
                              HorizontalContentAlignment="Left"
                              VerticalContentAlignment="Top"
                              xctk:Zoombox.ViewFinderVisibility="Visible">
                        <xctk:Zoombox.ViewStack>
                            <xctk:ZoomboxView>Fit</xctk:ZoomboxView>
                        </xctk:Zoombox.ViewStack>
                        <Image MouseDown="ImageIllumination_MouseDown"
                               Stretch="None"
                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                               RenderOptions.EdgeMode="Unspecified">
                            <Image.Source>
                                <MultiBinding Converter="{vc:PalletizedTextureConverter}">
                                    <Binding Path="OptModel.File.Textures/Value" />
                                    <Binding ElementName="texturePaletteSelector"
                                             Path="SelectedItem" />
                                </MultiBinding>
                            </Image.Source>
                        </Image>
                    </xctk:Zoombox>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
